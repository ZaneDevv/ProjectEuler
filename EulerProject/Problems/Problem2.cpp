#include <iostream>
#include "./Colors/Colors.h"

/**
* Exercise 2: Even Fibonacci Numbers
*
* Each new term in the Fibonacci sequence is generated by adding the previous
* two terms. By starting with and , the first terms will be: 
* 1, 23, 5, 8, 13, 21, 34, 55, 89...
*
* By considering the terms in the Fibonacci sequence whose values do not exceed
* four million, find the sum of the even-valued terms.
*
*
* @file Problem2.cpp
* @date 25/10/12
* @author Álvaro Fernández Barrero
*/


/**
* @brief Checks if the given number is even.
* @param The value to check.
* @return True if it is even, false if it is odd.
* @date 25/10/12
* @author Álvaro Fernández Barrero
*/
inline bool isEven(uint64_t);



int main2()
{
	// Defining variables
	 
	const uint64_t MAXIMUM = 4000000;

	uint64_t lastTerm0 = 1;
	uint64_t lastTerm1 = 1;

	size_t totalEvenFibonacciTermsSum = 0;


	// Computing the fibonacci terms below 4,000,000.

	do
	{
		uint64_t newFibonacciTerm = lastTerm0 + lastTerm1;
		
		lastTerm0 = lastTerm1;
		lastTerm1 = newFibonacciTerm;


		// If the new term is even, add it to the total sum.

		if (isEven(newFibonacciTerm))
		{
			totalEvenFibonacciTermsSum += newFibonacciTerm;
		}

	} while (lastTerm1 < MAXIMUM);

	
	// Printing the result.

	std::cout << "The sum of all the even Fibonacci numbers below " << RED << MAXIMUM << RESET_COLOR << " is ";
	std::cout << BLUE << totalEvenFibonacciTermsSum << RESET_COLOR << ".\n";


	std::cin.get();
	return 0;
}



inline bool isEven(uint64_t x)
{
	return x % 2 == 0;
}